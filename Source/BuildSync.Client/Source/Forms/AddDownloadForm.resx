<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="LegendImages.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="LegendImages.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADi
        BwAAAk1TRnQBSQFMAgEBAgIAAQEBAAEBASABAAEgAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABgAMA
        ASADAAEBAQABIAYAAUD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AFoAAzQEVAHuAwAB/wNY
        AcADHAEoWAADCAELAz8BbQNYAd0DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DWAHA
        Ay8BSv8AVQADNgFZA1gB6QMpAfoDUQGnAwAB/wNUAasDAAH/A1gBywMVAR1QAANZAewDAAH/AwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AzQBVP8ARQADAgEDAysBQgMA
        Af8DUgH0Az4BawQAAzgBXQMAAf8EAAMCAQMDWAHGAyAB/QNZAdcDEAEVSwAB/wMgAfwDXgHlA1ABngM0
        AVUDEgEZAwEBAgQAAwcBCgMdASoDPAFoA1YBuANZAewDAAH/AzkBYP8AQQADNwFbA1cB6ANQAfcDPwFt
        AwEBAggAAzgBXQMAAf8MAAMSARkDUgGoAwAB/wNXAb1EAANOAZgDBQEHAwABAQMbASYDMgFQA0ABcQNF
        AX8DRgGAA0QBewM8AWgDLQFFAxIBGAQAAxcBIAMsAUT/AEQAAf8DVQG6AwQBBRAAAzgBXQMAAf8UAAMT
        ARoDAAH/RAADEwEaA1kB1wM+AfgDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DWQHy
        A1IBqP8ASAAB/wNTAbAUAAM4AV0DAAH/FAADCAELAwAB/0cAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AzgBXv8ARAAB/wNTAbAUAAM4AV0DAAH/FAADCAEL
        AwAB/0cAAf8DVAHuA0cBggMsAUQDGgEkAwgBCwMAAQEEAAMDAQQDDQESAx8BLQMxAU8DUQGgAwAB/gM5
        AWD/AEQAAf8DUwGwFAADOAFdAwAB/xQAAwgBCwMAAf9EAAMxAU4HAAEBAzABTANQAZ8DXQHiAyAB/QMA
        Af8DQgH1A1kBzwNJAYkDIAEvCAADHAEo/wBEAAH/A1MBsBAAAzUBWANOAfADAAH/A1gBwAMcASgMAAMI
        AQsDAAH/RAADNQFWA1AB9wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        A1oB2AMQARX/AEQAAf8DUwGwCAADOQFgA1kB6wMhAfsDOwFjAxIBGANUAasDAAH/A1gBywMVAR0EAAMI
        AQsDAAH/RwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DOQFf/wBEAAH/A1YBswMuAUgDAAH/A0IB9QNCAXQQAAMCAQMDWAHGAyAB/QNZAdcDFwEgAwAB/0QA
        AyEB+wNbAcgDIQEwJAADNwFaA14B5QM5AWD/AEEAA14B2gMAAf8DAAH/A0MBdwMCAQMcAAMSARkDWQHP
        AwAB/wMAAf9EAAMcAScDCwEPAzsBZQNSAaYDWQHPA1MB8QMAAf4DAAH/AykB+gNcAecDWQHEA04BlwMw
        AU0DAQECAxABFv8ARQADHwEsA1gB7wMhAfsDTwGbAwABARQAAwoBDgNZAdcDAAH/A1UBtQMLAQ9EAANR
        AaADIAH9AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DUAH3AyEBMf8A
        TQADJAE1A1gB3QMAAf8DRwGDAwoBDQQAAxoBJQNcAc4DIAH9A1UBtQMFAQdPAAH+AwAB/wMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wM5AV//AFUAAykBPgNYAd0DKQH6
        A1kBwwMAAf8DUAGjAxIBGVQAAzUBVgNQAfcDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DAAH/AwAB/wNaAdgDDwEU/wBdAAMYASIDWgHKawABAQMwAUwDUAGeA1oB3gMhAfsDAAH/A04B8ANZ
        AcwDSgGKAx8BLf8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wA9AAFCAU0BPgcAAT4DAAEo
        AwABgAMAASADAAEBAQABAQYAAQIWAAP/AQAI/wgACP8IAAj/CAAI/wgACP8IAAj/CAAI/wgACP8IAAH/
        AfwBHwL/AYABAQH/CAAB/wHwAQcC/wGAAQAB/wgAAf8BggFBAv8CgAH/CAAB/wEGAXAC/wGAAQQB/wgA
        Af8BHgF8Av8BgAEBAf8IAAH/AT4BfAL/AYABAAH/CAAB/wE+AXwC/wKAAf8IAAH/AT4BfAL/AaABBgH/
        CAAB/wE8ARwC/wGAAQAB/wgAAf8BMAEEAv8BgAEAAf8IAAH/AQMBwAL/AY8B+AH/CAAB/wEHAfAC/wGA
        AQAB/wgAAf8BgwHgAv8BgAEAAf8IAAH/AeABgwL/AYABAAH/CAAB/wH4AQ8C/wGAAQAB/wgAAf8B/gF/
        Av8B4AEHAf8IAAj/CAAI/wgACP8IAAj/CAAI/wgACP8IAAj/CAAI/wgACw==
</value>
  </data>
</root>