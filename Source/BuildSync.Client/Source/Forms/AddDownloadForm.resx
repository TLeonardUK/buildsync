<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="LegendImages.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="LegendImages.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADm
        BwAAAk1TRnQBSQFMAgEBAgEAATgBAAE4AQABIAEAASABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAGA
        AwABIAMAAQEBAAEgBgABQP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8AWgADNAFUAzoB7gMA
        Af8DVwHAAxwBKFgAAwgBCwM/AW0DUgHdAwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        A1cBwAMvAUr/AFUAAzYBWQNFAekDFQH6A1EBpwMAAf8DVAGrAwAB/wNXAcsDFQEdUAADPwHsAwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wM0AVT/AEUAAwIBAwMr
        AUIDAAH/AykB9AM+AWsEAAM4AV0DAAH/BAADAgEDA1YBxgMHAf0DUwHXAxABFUsAAf8DBwH8A0sB5QNQ
        AZ4DNAFVAxIBGQMBAQIEAAMHAQoDHQEqAzwBaANWAbgDPwHsAwAB/wM5AWD/AEEAAzcBWwNEAegDIAH3
        Az8BbQMBAQIIAAM4AV0DAAH/DAADEgEZA1IBqAMAAf8DVwG9RAADTgGYAwUBBwMAAQEDGwEmAzIBUANA
        AXEDRQF/A0YBgANEAXsDPAFoAy0BRQMSARgEAAMXASADLAFE/wBEAAH/A1UBugMEAQUQAAM4AV0DAAH/
        FAADEwEaAwAB/0QAAxMBGgNTAdcDHQH4AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AzEB8gNSAaj/AEgAAf8DUwGwFAADOAFdAwAB/xQAAwgBCwMAAf9HAAH/AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wM4AV7/AEQAAf8DUwGwFAADOAFdAwAB/xQA
        AwgBCwMAAf9HAAH/AzoB7gNHAYIDLAFEAxoBJAMIAQsDAAEBBAADAwEEAw0BEgMfAS0DMQFPA1EBoAMA
        Af4DOQFg/wBEAAH/A1MBsBQAAzgBXQMAAf8UAAMIAQsDAAH/RAADMQFOBwABAQMwAUwDUAGfA00B4gMH
        Af0DAAH/AyUB9QNYAc8DSQGJAyABLwgAAxwBKP8ARAAB/wNTAbAQAAM1AVgDMwHwAwAB/wNXAcADHAEo
        DAADCAELAwAB/0QAAzUBVgMgAfcDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/
        AwAB/wNVAdgDEAEV/wBEAAH/A1MBsAgAAzkBYANDAesDDgH7AzsBYwMSARgDVAGrAwAB/wNXAcsDFQEd
        BAADCAELAwAB/0cAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DAAH/AzkBX/8ARAAB/wNVAbMDLgFIAwAB/wMlAfUDQgF0EAADAgEDA1YBxgMHAf0DUwHXAxcBIAMA
        Af9EAAMOAfsDWAHIAyEBMCQAAzcBWgNLAeUDOQFg/wBBAANUAdoDAAH/AwAB/wNDAXcDAgEDHAADEgEZ
        A1gBzwMAAf8DAAH/RAADHAEnAwsBDwM7AWUDUgGmA1gBzwM0AfEDAAH+AwAB/wMVAfoDRwHnA1gBxANO
        AZcDMAFNAwEBAgMQARb/AEUAAx8BLAM3Ae8DDgH7A08BmwMAAQEUAAMKAQ4DUwHXAwAB/wNVAbUDCwEP
        RAADUQGgAwcB/QMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AyAB9wMh
        ATH/AE0AAyQBNQNSAd0DAAH/A0cBgwMKAQ0EAAMaASUDWAHOAwcB/QNVAbUDBQEHTwAB/gMAAf8DAAH/
        AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DOQFf/wBVAAMpAT4DUgHd
        AxUB+gNYAcMDAAH/A1ABowMSARlUAAM1AVYDIAH3AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMA
        Af8DAAH/AwAB/wMAAf8DVQHYAw8BFP8AXQADGAEiA1cBymsAAQEDMAFMA1ABngNOAd4DDgH7AwAB/wMz
        AfADVwHMA0oBigMfAS3/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AP8APQABQgFNAT4HAAE+
        AwABKAMAAYADAAEgAwABAQEAAQEGAAECFgAD/wEACP8IAAj/CAAI/wgACP8IAAj/CAAI/wgACP8IAAj/
        CAAB/wH8AR8C/wGAAQEB/wgAAf8B8AEHAv8BgAEAAf8IAAH/AYIBQQL/AoAB/wgAAf8BBgFwAv8BgAEE
        Af8IAAH/AR4BfAL/AYABAQH/CAAB/wE+AXwC/wGAAQAB/wgAAf8BPgF8Av8CgAH/CAAB/wE+AXwC/wGg
        AQYB/wgAAf8BPAEcAv8BgAEAAf8IAAH/ATABBAL/AYABAAH/CAAB/wEDAcAC/wGPAfgB/wgAAf8BBwHw
        Av8BgAEAAf8IAAH/AYMB4AL/AYABAAH/CAAB/wHgAYMC/wGAAQAB/wgAAf8B+AEPAv8BgAEAAf8IAAH/
        Af4BfwL/AeABBwH/CAAI/wgACP8IAAj/CAAI/wgACP8IAAj/CAAI/wgACP8IAAs=
</value>
  </data>
</root>